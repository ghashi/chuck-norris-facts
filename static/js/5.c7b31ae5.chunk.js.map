{"version":3,"sources":["modules/home/component/category-list.style.tsx","modules/home/component/category-list.component.tsx","modules/home/home.map.ts","modules/home/home.page.tsx","atomic/obj.seo/list-json-ld.ts","data/http/dto/get-categories.request.ts","atomic/obj.hooks/data-api.hooks.tsx","atomic/obj.loading-and-error/loading-and-error.style.tsx","atomic/obj.loading-and-error/loading-and-error.component.tsx"],"names":["CategoryListStyled","styled","ul","_templateObject","Spacing","Medium","CategoryListItemContentStyled","span","_templateObject2","Color","GrayXDark","FontSize","Large","FontWeight","Bold","CategoryListItemStyled","li","_templateObject3","cardStyle","animationTime","Primary","White","CategoryList","props","categories","isLoading","Array","fill","to","name","_React$useState","React","_React$useState2","Object","slicedToArray","randomCategory","setRandomCategory","random","Math","floor","length","react","map","category","index","key","react_router_dom","bundle_default","a","width","mapToCategoryListItem","getCategoryDetailUrlPath","HomePage","list","_useDataApi","useDataApi","_useDataApi2","response","refetch","data","styled_flexboxgrid_es","xs","atm_typography","loading_and_error_component","isScreenPopulated","loading","error","isError","category_list_component","json_ld_component","jsonld","concat","REACT_APP_SITE_URL","@context","@type","itemListElement","item","position","url","error_placeholder_component","onClick","initialUrl","initialData","_useState","useState","_useState2","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","setUrl","_useReducer","useReducer","dataFetchReducer","_useReducer2","state","dispatch","_useState3","Date","now","_useState4","refetchTimestamp","setRefetchTimestamp","useCallback","type","useEffect","didCancel","_ref","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","result","wrap","_context","prev","next","axios","REACT_APP_BASE_URL","sent","payload","t0","stop","apply","this","arguments","fetchData","action","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Error","LoadingAndErroForegroundStyled","div","__webpack_require__","d","__webpack_exports__","LoadingAndErrorLoadingPart","LoadingAndErrorErrorPart","loading_and_error_component_LoadingAndErrorContentPart","loading_and_error_component_LoadingAndError","children","LoadingAndErrorContentPart","LoadingAndError","child","getLoading","getContent","console","trace","getError"],"mappings":"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","file":"static/js/5.c7b31ae5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {\n  animationTime,\n  Color,\n  FontSize,\n  FontWeight,\n  Spacing\n} from '../../../atomic/obj.constants';\nimport { cardStyle } from '../../../atomic/obj.mixin';\n\nexport const CategoryListStyled = styled.ul`\n  display: grid;\n  grid-gap: ${Spacing.Medium};\n  grid-template-columns: repeat(2, 1fr);\n  @media all and (min-width: 48em) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n  list-style: none;\n  padding: 0;\n`;\n\nexport const CategoryListItemContentStyled = styled.span`\n  display: block;\n  padding: ${Spacing.Medium};\n  color: ${Color.GrayXDark};\n  font-size: ${FontSize.Large};\n  font-weight: ${FontWeight.Bold};\n`;\nexport const CategoryListItemStyled = styled.li`\n  ${cardStyle}\n  text-align: center;\n\n  transition: all ${animationTime};\n\n  :hover {\n    background: ${Color.Primary};\n    ${CategoryListItemContentStyled} {\n      color: ${Color.White};\n    }\n  }\n`;\n","import * as React from 'react';\nimport {\n  CategoryListItemContentStyled,\n  CategoryListItemStyled,\n  CategoryListStyled\n} from './category-list.style';\nimport Skeleton from 'react-loading-skeleton';\nimport { Link } from 'react-router-dom';\n\nexport interface CategoryListItem {\n  name: string;\n  to: string;\n}\nexport interface CategoryListProps {\n  categories?: CategoryListItem[];\n  isLoading?: boolean;\n}\n\nconst CategoryList: React.FunctionComponent<CategoryListProps> = props => {\n  const loadingCategory = { to: '', name: '' };\n  const categories = props.isLoading\n    ? Array(10).fill(loadingCategory)\n    : props.categories;\n\n  const [randomCategory, setRandomCategory] = React.useState<\n    CategoryListItem\n  >();\n  React.useEffect(() => {\n    if (!categories) {\n      return;\n    }\n    const random = categories[Math.floor(Math.random() * categories.length)];\n    setRandomCategory(random);\n  }, [categories]);\n\n  if (!categories) {\n    return null;\n  }\n\n  return (\n    <CategoryListStyled>\n      {categories.map((category, index) => (\n        <CategoryListItemStyled key={index}>\n          <Link to={category.to}>\n            <CategoryListItemContentStyled>\n              {category.name || <Skeleton width={90} />}\n            </CategoryListItemContentStyled>\n          </Link>\n        </CategoryListItemStyled>\n      ))}\n      {randomCategory && randomCategory.to && (\n        <CategoryListItemStyled>\n          <Link to={randomCategory.to}>\n            <CategoryListItemContentStyled>???</CategoryListItemContentStyled>\n          </Link>\n        </CategoryListItemStyled>\n      )}\n    </CategoryListStyled>\n  );\n};\n\nexport default CategoryList;\n","import { getCategoryDetailUrlPath } from '../category-detail/category-detail.lazy';\nimport { CategoryListItem } from './component/category-list.component';\n\nexport const mapToCategoryListItem = (category: string) =>\n  ({\n    name: category,\n    to: getCategoryDetailUrlPath(category)\n  } as CategoryListItem);\n","import * as React from 'react';\nimport { Col, Grid, Row } from 'react-styled-flexboxgrid';\nimport { Body, H1 } from '../../atomic/atm.typography';\nimport ErrorPlaceholder from '../../atomic/mol.error-placeholder/error-placeholder.component';\nimport { useDataApi } from '../../atomic/obj.hooks/data-api.hooks';\nimport {\n  LoadingAndError,\n  LoadingAndErrorContentPart,\n  LoadingAndErrorErrorPart,\n  LoadingAndErrorLoadingPart\n} from '../../atomic/obj.loading-and-error/loading-and-error.component';\nimport {\n  getCategoriesApiPath,\n  GetCategoriesResponse\n} from '../../data/http/dto/get-categories.request';\nimport CategoryList from './component/category-list.component';\nimport { mapToCategoryListItem } from './home.map';\nimport { JsonLd } from '../../atomic/obj.seo/json-ld.component';\nimport { getListJsonLd } from '../../atomic/obj.seo/list-json-ld';\nimport { REACT_APP_SITE_URL } from '../..';\n\ninterface HomePageProps {}\n\nconst HomePage: React.FunctionComponent<HomePageProps> = props => {\n  const [response, , refetch] = useDataApi<GetCategoriesResponse>(\n    getCategoriesApiPath\n  );\n  const categories = response.data && response.data.map(mapToCategoryListItem);\n  return (\n    <Grid>\n      <Row>\n        <Col xs={12}>\n          <H1>Learn something about Him!</H1>\n          <Body>Choose a category:</Body>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <LoadingAndError\n            isScreenPopulated={!!response.data}\n            loading={response.isLoading}\n            error={response.isError}\n          >\n            <LoadingAndErrorLoadingPart>\n              <CategoryList isLoading />\n            </LoadingAndErrorLoadingPart>\n            <LoadingAndErrorContentPart>\n              <CategoryList categories={categories} />\n\n              {categories && (\n                <JsonLd\n                  jsonld={getListJsonLd(\n                    categories.map(\n                      category => `${REACT_APP_SITE_URL}${category.to}`\n                    )\n                  )}\n                />\n              )}\n            </LoadingAndErrorContentPart>\n            <LoadingAndErrorErrorPart>\n              <ErrorPlaceholder onClick={refetch} />\n            </LoadingAndErrorErrorPart>\n          </LoadingAndError>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default HomePage;\n","/** https://developers.google.com/search/docs/guides/mark-up-listings#summary-page--multiple-full-details-pages */\nexport const getListJsonLd = (list: string[]) => ({\n  '@context': 'https://schema.org',\n  '@type': 'ItemList',\n  itemListElement: list.map((item, index) => ({\n    '@type': 'ListItem',\n    position: index + 1,\n    url: item\n  }))\n});\n","export const getCategoriesApiPath = 'jokes/categories';\n\nexport type GetCategoriesResponse = string[];\n","import axios from 'axios';\nimport { useEffect, useReducer, useState, useCallback } from 'react';\nimport { REACT_APP_BASE_URL } from '../..';\n\nexport interface UseDataState<D> {\n  isLoading: boolean;\n  isError: boolean;\n  data?: D;\n}\n\ninterface UseDataActions<D> {\n  type: 'FETCH_INIT' | 'FETCH_SUCCESS' | 'FETCH_FAILURE' | 'FETCH_REINIT';\n  payload?: D;\n}\n\ntype UseDataReducer<D> = (\n  state: UseDataState<D>,\n  action: UseDataActions<D>\n) => UseDataState<D>;\n\nexport function useDataApi<D>(\n  initialUrl: string,\n  initialData?: D\n): [UseDataState<D>, React.Dispatch<React.SetStateAction<string>>, () => void] {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer<UseDataReducer<D>>(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n\n  const [refetchTimestamp, setRefetchTimestamp] = useState(Date.now());\n  const refetch = useCallback(() => {\n    setRefetchTimestamp(Date.now());\n    dispatch({ type: 'FETCH_REINIT' });\n  }, []);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(`${REACT_APP_BASE_URL}/${url}`);\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url, refetchTimestamp]);\n\n  return [state, setUrl, refetch];\n}\n\nfunction dataFetchReducer<D>(\n  state: UseDataState<D>,\n  action: UseDataActions<D>\n): UseDataState<D> {\n  switch (action.type) {\n    case 'FETCH_REINIT':\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      throw new Error();\n  }\n}\n","import styled from 'styled-components';\n\nexport const LoadingAndErroForegroundStyled = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  background-color: rgba(255, 255, 255, 0.6);\n`;\n","import * as React from 'react';\nimport { LoadingAndErroForegroundStyled } from './loading-and-error.style';\n\ninterface LoadingPartProps {}\nexport const LoadingAndErrorLoadingPart: React.FunctionComponent<\n  LoadingPartProps\n> = React.memo(props => <>{props.children}</>);\n\ninterface ErrorPartProps {}\nexport const LoadingAndErrorErrorPart: React.FunctionComponent<\n  ErrorPartProps\n> = React.memo(props => <>{props.children}</>);\n\ninterface ContentPartProps {}\nexport const LoadingAndErrorContentPart: React.FunctionComponent<\n  ContentPartProps\n> = props => <>{props.children}</>;\n\ninterface LoadingAndErrorProps {\n  loading: boolean;\n  /** set this so the component knows how to handle errors and loading */\n  isScreenPopulated: boolean;\n  error?: boolean;\n  /**\n   * this component children should be wrapper with\n   * <LoadingAndErrorLoadingPart>\n   * <LoadingAndErrorErrorPart>\n   * <LoadingAndErrorContentPart>\n   */\n  children: any;\n}\n\nexport const LoadingAndError: React.FunctionComponent<\n  LoadingAndErrorProps\n> = props => {\n  return (\n    <>\n      {props.loading && !props.isScreenPopulated && getLoading(props)}\n      {props.error ? getError(props) : getContent(props)}\n      {props.loading && props.isScreenPopulated && (\n        <LoadingAndErroForegroundStyled />\n      )}\n    </>\n  );\n};\n\nfunction getLoading(props: LoadingAndErrorProps) {\n  const loading = React.Children.map(props.children, (child: any) => {\n    return child && child.type === LoadingAndErrorLoadingPart && child;\n  });\n  return loading;\n}\n\nfunction getContent(props: LoadingAndErrorProps) {\n  if (!props.isScreenPopulated) {\n    return null;\n  }\n\n  const wrapped = React.Children.map(props.children, (child: any) => {\n    return child && child.type === LoadingAndErrorContentPart && child;\n  });\n  return wrapped;\n}\n\nfunction getError(props: LoadingAndErrorProps) {\n  if (props.isScreenPopulated) {\n    return getContent(props);\n  }\n\n  console.trace('getViewForError -> props', props);\n\n  const wrapped = React.Children.map(props.children, (child: any) => {\n    return child && child.type === LoadingAndErrorErrorPart && child;\n  });\n  return wrapped;\n}\n"],"sourceRoot":""}