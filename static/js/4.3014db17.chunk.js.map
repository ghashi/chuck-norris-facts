{"version":3,"sources":["atomic/atm.highlighted-sentence/highlighted-sentence.style.tsx","atomic/atm.highlighted-sentence/highlighted-sentence.component.tsx","data/http/dto/get-category-detail.request.ts","modules/category-detail/category-detail.page.tsx","modules/category-detail/category-detail-api.hook.tsx","atomic/obj.hooks/data-api.hooks.tsx","atomic/obj.loading-and-error/loading-and-error.style.tsx","atomic/obj.loading-and-error/loading-and-error.component.tsx"],"names":["HighlightedSentenceStyled","styled","p","_templateObject","BrandColor","Snow","FontSize","Large","Spacing","Medium","HighlightedSentence","props","react","children","getCategoryDetailApiPath","category","concat","CategoryDetailPage","_useCategoryDetailAPI","name","_useDataApi","useDataApi","_useDataApi2","Object","slicedToArray","response","refetch","currentId","String","data","id","lastResponseId","React","handleReload","current","isError","isLoading","useCategoryDetailAPI","_useCategoryDetailAPI2","styled_flexboxgrid_es","xs","atm_typography","loading_and_error_component","isScreenPopulated","loading","error","sm","md","highlighted_sentence_component","bundle_default","a","count","animation_component_style","show","key","value","button_component","onClick","utils_style","react_router_dom","to","homeRoutePath","outline","error_placeholder_component","initialUrl","initialData","_useState","useState","_useState2","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","url","setUrl","_useReducer","useReducer","dataFetchReducer","_useReducer2","state","dispatch","_useState3","Date","now","_useState4","refetchTimestamp","setRefetchTimestamp","useCallback","type","useEffect","didCancel","_ref","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","result","wrap","_context","prev","next","axios","REACT_APP_BASE_URL","sent","payload","t0","stop","apply","this","arguments","fetchData","action","_Users_taqtile_Projects_chuck_norris_facts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Error","LoadingAndErroForegroundStyled","div","__webpack_require__","d","__webpack_exports__","LoadingAndErrorLoadingPart","LoadingAndErrorErrorPart","loading_and_error_component_LoadingAndErrorContentPart","loading_and_error_component_LoadingAndError","LoadingAndErrorContentPart","LoadingAndError","map","child","getLoading","getContent","console","trace","getError"],"mappings":"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","file":"static/js/4.3014db17.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { BrandColor, FontSize, Spacing } from '../obj.constants';\n\nexport const HighlightedSentenceStyled = styled.p`\n  background: ${BrandColor.Snow};\n  font-size: ${FontSize.Large};\n  line-height: 1.5;\n  padding: ${Spacing.Large};\n  margin: ${Spacing.Medium} 0;\n  border-radius: 4px;\n`;\n","import * as React from 'react';\nimport { HighlightedSentenceStyled } from './highlighted-sentence.style';\n\ninterface IHighlightedSentenceProps {}\n\nconst HighlightedSentence: React.FunctionComponent<\n  IHighlightedSentenceProps\n> = props => {\n  return (\n    <HighlightedSentenceStyled>{props.children}</HighlightedSentenceStyled>\n  );\n};\n\nexport default HighlightedSentence;\n","export const getCategoryDetailApiPath = (category: string) =>\n  `jokes/random?category=${category}`;\n\nexport interface GetCategoryDetailResponse {\n  categories: string[];\n  created_at: string;\n  icon_url: string;\n  id: string;\n  updated_at: string;\n  url: string;\n  value: string;\n}\n","import * as React from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { Link } from 'react-router-dom';\nimport { Col, Grid, Row } from 'react-styled-flexboxgrid';\nimport Button from '../../atomic/atm.button/button.component';\nimport HighlightedSentence from '../../atomic/atm.highlighted-sentence/highlighted-sentence.component';\nimport { H1 } from '../../atomic/atm.typography';\nimport { VSeparator } from '../../atomic/atm.utils/utils.style';\nimport ErrorPlaceholder from '../../atomic/mol.error-placeholder/error-placeholder.component';\nimport { Fade } from '../../atomic/obj.animation/animation.component.style';\nimport {\n  LoadingAndError,\n  LoadingAndErrorContentPart,\n  LoadingAndErrorErrorPart,\n  LoadingAndErrorLoadingPart\n} from '../../atomic/obj.loading-and-error/loading-and-error.component';\nimport { homeRoutePath } from '../home/home.lazy';\nimport { useCategoryDetailAPI } from './category-detail-api.hook';\n\ninterface CategoryDetailPageProps {\n  name: string;\n}\n\nconst CategoryDetailPage: React.FunctionComponent<\n  CategoryDetailPageProps\n> = props => {\n  const [response, handleReload] = useCategoryDetailAPI(props.name);\n\n  return (\n    <Grid>\n      <Row>\n        <Col xs={12}>\n          <H1>{props.name} facts!</H1>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <LoadingAndError\n            isScreenPopulated={!!response.data}\n            loading={response.isLoading}\n            error={response.isError}\n          >\n            <LoadingAndErrorLoadingPart>\n              <Row>\n                <Col xs={12} sm={9} md={9}>\n                  <HighlightedSentence>\n                    <Skeleton count={3} />\n                  </HighlightedSentence>\n                </Col>\n              </Row>\n            </LoadingAndErrorLoadingPart>\n            <LoadingAndErrorContentPart>\n              <Row>\n                <Col xs={12} sm={9} md={9}>\n                  <Fade show={true} key={response.data && response.data.id}>\n                    <HighlightedSentence>\n                      {response.data && response.data.value}\n                    </HighlightedSentence>\n                  </Fade>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button onClick={handleReload} loading={response.isLoading}>\n                    Gimme another fact!\n                  </Button>\n                  <VSeparator />\n                </Col>\n                <Col>\n                  <Link to={homeRoutePath}>\n                    <Button outline>Show all categories</Button>\n                  </Link>\n                </Col>\n              </Row>\n            </LoadingAndErrorContentPart>\n            <LoadingAndErrorErrorPart>\n              <ErrorPlaceholder onClick={handleReload} />\n            </LoadingAndErrorErrorPart>\n          </LoadingAndError>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default CategoryDetailPage;\n","import * as React from 'react';\nimport {\n  useDataApi,\n  UseDataState\n} from '../../atomic/obj.hooks/data-api.hooks';\nimport {\n  getCategoryDetailApiPath,\n  GetCategoryDetailResponse\n} from '../../data/http/dto/get-category-detail.request';\n\nexport function useCategoryDetailAPI(\n  name: string\n): [UseDataState<GetCategoryDetailResponse>, () => void] {\n  const [response, , refetch] = useDataApi<GetCategoryDetailResponse>(\n    getCategoryDetailApiPath(name)\n  );\n  const currentId = String(response.data && response.data.id);\n\n  /** re-fetch if next response is the same as the last one */\n  const lastResponseId = React.useRef<string>();\n  const handleReload = React.useCallback(() => {\n    lastResponseId.current = currentId;\n    refetch();\n  }, [currentId, refetch]);\n  if (\n    !response.isError &&\n    !response.isLoading &&\n    lastResponseId.current === currentId\n  ) {\n    refetch();\n  }\n\n  return [response, handleReload];\n}\n","import axios from 'axios';\nimport { useEffect, useReducer, useState, useCallback } from 'react';\nimport { REACT_APP_BASE_URL } from '../..';\n\nexport interface UseDataState<D> {\n  isLoading: boolean;\n  isError: boolean;\n  data?: D;\n}\n\ninterface UseDataActions<D> {\n  type: 'FETCH_INIT' | 'FETCH_SUCCESS' | 'FETCH_FAILURE' | 'FETCH_REINIT';\n  payload?: D;\n}\n\ntype UseDataReducer<D> = (\n  state: UseDataState<D>,\n  action: UseDataActions<D>\n) => UseDataState<D>;\n\nexport function useDataApi<D>(\n  initialUrl: string,\n  initialData?: D\n): [UseDataState<D>, React.Dispatch<React.SetStateAction<string>>, () => void] {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer<UseDataReducer<D>>(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n\n  const [refetchTimestamp, setRefetchTimestamp] = useState(Date.now());\n  const refetch = useCallback(() => {\n    setRefetchTimestamp(Date.now());\n    dispatch({ type: 'FETCH_REINIT' });\n  }, []);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(`${REACT_APP_BASE_URL}/${url}`);\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url, refetchTimestamp]);\n\n  return [state, setUrl, refetch];\n}\n\nfunction dataFetchReducer<D>(\n  state: UseDataState<D>,\n  action: UseDataActions<D>\n): UseDataState<D> {\n  switch (action.type) {\n    case 'FETCH_REINIT':\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      throw new Error();\n  }\n}\n","import styled from 'styled-components';\n\nexport const LoadingAndErroForegroundStyled = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  background-color: rgba(255, 255, 255, 0.6);\n`;\n","import * as React from 'react';\nimport { LoadingAndErroForegroundStyled } from './loading-and-error.style';\n\ninterface LoadingPartProps {}\nexport const LoadingAndErrorLoadingPart: React.FunctionComponent<\n  LoadingPartProps\n> = React.memo(props => <>{props.children}</>);\n\ninterface ErrorPartProps {}\nexport const LoadingAndErrorErrorPart: React.FunctionComponent<\n  ErrorPartProps\n> = React.memo(props => <>{props.children}</>);\n\ninterface ContentPartProps {}\nexport const LoadingAndErrorContentPart: React.FunctionComponent<\n  ContentPartProps\n> = props => <>{props.children}</>;\n\ninterface LoadingAndErrorProps {\n  loading: boolean;\n  /** set this so the component knows how to handle errors and loading */\n  isScreenPopulated: boolean;\n  error?: boolean;\n  /**\n   * this component children should be wrapper with\n   * <LoadingAndErrorLoadingPart>\n   * <LoadingAndErrorErrorPart>\n   * <LoadingAndErrorContentPart>\n   */\n  children: any;\n}\n\nexport const LoadingAndError: React.FunctionComponent<\n  LoadingAndErrorProps\n> = props => {\n  return (\n    <>\n      {props.loading && !props.isScreenPopulated && getLoading(props)}\n      {props.error ? getError(props) : getContent(props)}\n      {props.loading && props.isScreenPopulated && (\n        <LoadingAndErroForegroundStyled />\n      )}\n    </>\n  );\n};\n\nfunction getLoading(props: LoadingAndErrorProps) {\n  const loading = React.Children.map(props.children, (child: any) => {\n    return child && child.type === LoadingAndErrorLoadingPart && child;\n  });\n  return loading;\n}\n\nfunction getContent(props: LoadingAndErrorProps) {\n  if (!props.isScreenPopulated) {\n    return null;\n  }\n\n  const wrapped = React.Children.map(props.children, (child: any) => {\n    return child && child.type === LoadingAndErrorContentPart && child;\n  });\n  return wrapped;\n}\n\nfunction getError(props: LoadingAndErrorProps) {\n  if (props.isScreenPopulated) {\n    return getContent(props);\n  }\n\n  console.trace('getViewForError -> props', props);\n\n  const wrapped = React.Children.map(props.children, (child: any) => {\n    return child && child.type === LoadingAndErrorErrorPart && child;\n  });\n  return wrapped;\n}\n"],"sourceRoot":""}