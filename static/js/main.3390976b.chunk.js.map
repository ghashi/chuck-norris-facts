{"version":3,"sources":["atomic/obj.constants/constants.ts","atomic/obj.constants/index.ts","atomic/atm.typography/typography.component.tsx","atomic/atm.typography/index.ts","modules/home/home.lazy.tsx","atomic/obj.globals/index.ts","atomic/atm.footer/footer.style.tsx","atomic/atm.footer/footer.component.tsx","atomic/atm.header/header.style.tsx","atomic/atm.header/header.component.tsx","atomic/obj.error-boundary/error-boundary.component.tsx","atomic/org.layout/layout.style.tsx","atomic/org.layout/layout.component.tsx","modules/404/404.page.tsx","App.tsx","serviceWorker.ts","index.tsx","atomic/obj.animation/animation.component.style.tsx","atomic/atm.button/button.component.style.tsx","atomic/atm.button/button.component.tsx","atomic/obj.mixin/index.ts","atomic/obj.mixin/mixin.component.style.tsx","atomic/atm.page-loading/page-loading.style.tsx","atomic/obj.seo/social-media-seo.component.tsx","atomic/obj.seo/seo.component.tsx","atomic/atm.utils/utils.style.tsx","modules/category-detail/category-detail.lazy.tsx","atomic/mol.error-placeholder/error-placeholder.style.tsx","atomic/mol.error-placeholder/error-placeholder.component.tsx","atomic/obj.seo/json-ld.component.tsx"],"names":["BrandColor","Color","Object","classCallCheck","this","Black","White","GrayXLight","GrayLight","Gray","GrayDark","GrayXDark","Primary","OrangeRed","Secondary","ChineseRed","Alert","Warning","Success","FontFamily","FontWeight","FontSize","Spacing","__webpack_require__","d","__webpack_exports__","constants_Color","H1FontSize","XXLarge","H1","styled","h1","_templateObject","Normal","Bold","Large","H2FontSize","_templateObject2","XLarge","H3","h2","_templateObject3","h3","_templateObject4","H4FontSize","h4","_templateObject5","span","_templateObject6","BodyFontSize","Medium","Body","p","_templateObject7","homeRoutePath","react__WEBPACK_IMPORTED_MODULE_0__","___WEBPACK_IMPORTED_MODULE_1__","_atomic_atm_page_loading_page_loading_style__WEBPACK_IMPORTED_MODULE_2__","_atomic_obj_seo_seo_component__WEBPACK_IMPORTED_MODULE_3__","HomePage","React","Promise","all","e","then","bind","HomeLazy","props","currentUrl","concat","REACT_APP_SITE_URL","location","pathname","socialMedia","url","title","image","imageAlt","description","fallback","GlobalStyled","createGlobalStyle","Base","FooterStyled","footer","footer_style_templateObject","KenyanCopper","Small","FooterContentStyled","div","Footer","react","styled_flexboxgrid_es","center","atm_typography","HeaderStyled","header","header_style_templateObject","Snow","HeaderTitleStyled","header_style_templateObject2","Header","react_router_dom","to","ErrorBoundary","_React$Component","_this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","key","value","xs","error_placeholder_component","children","error","LayoutStyled","layout_style_templateObject","LayoutContentStyled","main","layout_style_templateObject2","Layout","header_component","error_boundary_component_ErrorBoundary","footer_component","Page404Page","utils_style","button_component","App","layout_component","react_router","path","exact","component","categoryDetailRoutePath","CategoryLazy","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","NODE_ENV","REACT_APP_BASE_URL","process","ReactDOM","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","require","axe","fadeIn","keyframes","fadeOut","Fade","show","duration","animationTime","rotateAnimation","ButtonStyled","button","SemiBold","highlightStyle","disabled","loading","outline","ButtonContentStyled","ButtonSpinnerWrapperStyled","loadingSize","ButtonSpinnerStyled","LoaderAlt","attrs","size","Button","others","type","objectWithoutProperties","assign","defaultProps","PageLoadingSpinner","SocialMediaSEO","memo","react_default","a","createElement","Helmet_default","name","content","property","prevProps","nextProps","seo_component_SEO","SEO","mainInfo","charSet","rel","jsonld","json_ld_component","VSeparator","getCategoryDetailUrlPath","id","CategoryDetailPage","CategoryDetailLazy","params","ErrorPlaceholderStyled","cardStyle","ErrorPlaceholder","ErrorOutline_esm","onClick","buttonTitle","JsonLd","dangerouslySetInnerHTML","__html","JSON","stringify"],"mappings":"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","file":"static/js/main.3390976b.chunk.js","sourcesContent":["export enum BrandColor {\n  Coquelicot = '#E53D00',\n  OrangeRed = '#FF4300',\n  Snow = '#FFF9F7',\n  ChineseRed = '#A04321',\n  KenyanCopper = '#681E04'\n}\n\n// We used class rather than enums since enums don't support computed values\nexport class Color {\n  public static readonly Black = 'black';\n  public static readonly White = 'white';\n\n  public static readonly GrayXLight = '#F8F9F9';\n  public static readonly GrayLight = '#DEE1E3';\n  public static readonly Gray = '#777';\n  public static readonly GrayDark = '#555';\n  public static readonly GrayXDark = '#333';\n\n  public static readonly Primary = BrandColor.OrangeRed;\n  public static readonly Secondary = BrandColor.ChineseRed;\n\n  public static readonly Alert = '#CF000F';\n  public static readonly Warning = '#F5E51B';\n  public static readonly Success = '#26C281';\n}\n\nexport const animationTime = '.3s';\n\nexport enum FontFamily {\n  Primary = 'Muli, sans-serif'\n}\n\nexport enum FontWeight {\n  Bold = 'bold',\n  SemiBold = 600,\n  Normal = 'normal',\n  Lighter = 200\n}\n\nexport enum FontSize {\n  Base = '16px',\n  Small = '0.667rem',\n  Medium = '1rem',\n  Large = '1.33rem',\n  XLarge = '2.35rem',\n  XXLarge = '3.12rem'\n}\n\nexport enum Spacing {\n  XSmall = '4px',\n  Small = '8px',\n  Medium = '16px',\n  Large = '24px',\n  XLarge = '32px',\n  XXLarge = '60px'\n}\n","export * from './constants';\n","import styled from 'styled-components';\nimport { Color, FontSize, FontWeight, Spacing } from '../obj.constants';\n\nexport const H1FontSize = FontSize.XXLarge;\nexport const H1 = styled.h1`\n  color: ${Color.GrayXDark};\n  font-size: ${H1FontSize};\n  font-weight: ${FontWeight.Normal};\n  font-weight: ${FontWeight.Bold};\n  margin: 0;\n  margin-top: ${Spacing.Large};\n`;\n\nexport const H1Light = styled(H1)`\n  color: ${Color.White};\n`;\n\nexport const H2FontSize = FontSize.XLarge;\nexport const H2 = styled.h2`\n  color: ${Color.GrayXDark};\n  font-size: ${H2FontSize};\n  font-weight: ${FontWeight.Bold};\n  margin: 0;\n`;\n\nexport const H3 = styled.h3`\n  color: ${Color.GrayXDark};\n  font-size: ${FontSize.Large};\n  font-weight: ${FontWeight.Bold};\n  margin: 0;\n`;\n\nexport const H4FontSize = FontSize.Large;\nexport const H4 = styled.h4`\n  color: ${Color.GrayXDark};\n  font-size: ${H4FontSize};\n  font-weight: ${FontWeight.Normal};\n  margin: 0;\n`;\n\nexport const Bold = styled.span`\n  font-weight: ${FontWeight.Bold};\n`;\n\nexport const BodyFontSize = FontSize.Medium;\nexport const Body = styled.p`\n  color: ${Color.GrayDark};\n  margin: 0;\n  font-size: ${BodyFontSize};\n  font-weight: ${FontWeight.Normal};\n`;\n","export * from './typography.component';\n","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport { REACT_APP_SITE_URL } from '../..';\nimport { PageLoadingSpinner } from '../../atomic/atm.page-loading/page-loading.style';\nimport { SEO } from '../../atomic/obj.seo/seo.component';\n\nexport const homeRoutePath = `/`;\nexport const getHomeUrlPath = `/`;\n\nconst HomePage = React.lazy(() => import('./home.page'));\n\ninterface HomeLazyProps extends RouteChildrenProps<any> {}\n\nconst HomeLazy: React.FunctionComponent<HomeLazyProps> = props => {\n  const currentUrl = `${REACT_APP_SITE_URL}${props.location.pathname}`;\n  return (\n    <>\n      <SEO\n        socialMedia={{\n          url: currentUrl,\n          title: 'Chuck Norris Facts',\n          image: 'https://assets.chucknorris.host/img/avatar/chuck-norris.png',\n          imageAlt: 'Chuck Norris avatar',\n          description: 'Learn something about Him!'\n        }}\n      />\n\n      <React.Suspense fallback={<PageLoadingSpinner />}>\n        <HomePage />\n      </React.Suspense>\n    </>\n  );\n};\n\nexport default HomeLazy;\n","import { createGlobalStyle } from 'styled-components';\nimport { FontFamily, FontSize } from '../obj.constants';\n\nexport const GlobalStyled = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Muli');\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: ${FontSize.Base};\n  }\n\n  body {\n    font-family: ${FontFamily.Primary};\n\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    -webkit-tap-highlight-color: rgba(0,0,0,0.05);\n  }\n`;\n","import styled from 'styled-components';\nimport { BrandColor, Color, Spacing } from '../obj.constants';\n\nexport const footerHeight = '35px';\nexport const FooterStyled = styled.footer`\n  background: ${BrandColor.KenyanCopper};\n  padding: ${Spacing.Small};\n`;\n\nexport const FooterContentStyled = styled.div`\n  color: ${Color.White};\n`;\n","import * as React from 'react';\nimport { Col, Grid, Row } from 'react-styled-flexboxgrid';\nimport { Bold } from '../atm.typography';\nimport { FooterContentStyled, FooterStyled } from './footer.style';\n\ninterface FooterProps {}\n\nconst Footer: React.FunctionComponent<FooterProps> = props => {\n  return (\n    <FooterStyled>\n      <Grid>\n        <Row center=\"xs\">\n          <Col>\n            <FooterContentStyled>\n              <Bold>Chuck Norris Facts</Bold> by Guilherme Hashioka\n            </FooterContentStyled>\n          </Col>\n        </Row>\n      </Grid>\n    </FooterStyled>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\nimport {\n  FontSize,\n  Spacing,\n  Color,\n  FontWeight,\n  BrandColor\n} from '../obj.constants';\n\nexport const headerHeight = '51px';\nexport const HeaderStyled = styled.header`\n  border-bottom: 1px solid ${Color.GrayLight};\n  background: ${BrandColor.Snow};\n  padding: ${Spacing.Medium};\n`;\n\nexport const HeaderTitleStyled = styled.span`\n  font-size: ${FontSize.Medium};\n  font-weight: ${FontWeight.Bold};\n  color: ${BrandColor.ChineseRed};\n  text-transform: uppercase;\n  letter-spacing: 2px;\n`;\n","import * as React from 'react';\nimport { HeaderStyled, HeaderTitleStyled } from './header.style';\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid';\nimport { Link } from 'react-router-dom';\nimport { homeRoutePath } from '../../modules/home/home.lazy';\n\ninterface HeaderProps {}\n\nconst Header: React.FunctionComponent<HeaderProps> = props => {\n  return (\n    <HeaderStyled>\n      <Grid>\n        <Row>\n          <Col>\n            <Link to={homeRoutePath}>\n              <HeaderTitleStyled>Chuck Norris Facts</HeaderTitleStyled>\n            </Link>\n          </Col>\n        </Row>\n      </Grid>\n    </HeaderStyled>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport ErrorPlaceholder from '../mol.error-placeholder/error-placeholder.component';\nimport { Col, Grid, Row } from 'react-styled-flexboxgrid';\n\nexport class ErrorBoundary extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Grid>\n          <Row>\n            <Col xs={12}>\n              <ErrorPlaceholder />\n            </Col>\n          </Row>\n        </Grid>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import styled from 'styled-components';\nimport { headerHeight } from '../atm.header/header.style';\nimport { footerHeight } from '../atm.footer/footer.style';\n\nexport const LayoutStyled = styled.div``;\nexport const LayoutContentStyled = styled.main`\n  min-height: calc(100vh - ${headerHeight} - ${footerHeight});\n`;\n","import * as React from 'react';\nimport Footer from '../atm.footer/footer.component';\nimport Header from '../atm.header/header.component';\nimport { ErrorBoundary } from '../obj.error-boundary/error-boundary.component';\nimport { LayoutContentStyled, LayoutStyled } from './layout.style';\n\ninterface LayoutProps {}\n\nconst Layout: React.FunctionComponent<LayoutProps> = props => {\n  return (\n    <LayoutStyled>\n      <Header />\n      <ErrorBoundary>\n        <LayoutContentStyled>{props.children}</LayoutContentStyled>\n      </ErrorBoundary>\n      <Footer />\n    </LayoutStyled>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { Col, Grid, Row } from 'react-styled-flexboxgrid';\nimport { Body, H1 } from '../../atomic/atm.typography';\nimport { Link } from 'react-router-dom';\nimport { homeRoutePath } from '../home/home.lazy';\nimport Button from '../../atomic/atm.button/button.component';\nimport { VSeparator } from '../../atomic/atm.utils/utils.style';\n\ninterface Page404PageProps {}\n\nconst Page404Page: React.FunctionComponent<Page404PageProps> = props => {\n  return (\n    <Grid>\n      <Row>\n        <Col xs={12}>\n          <H1>Error 404</H1>\n          <VSeparator />\n          <Body>\n            The page you're looking for is not here because Chuck Norris took\n            it.\n          </Body>\n          <VSeparator />\n          <Link to={homeRoutePath}>\n            <Button>Return to somewhere safe!</Button>\n          </Link>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default Page404Page;\n","import * as React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GlobalStyled } from './atomic/obj.globals';\nimport Layout from './atomic/org.layout/layout.component';\nimport Page404Page from './modules/404/404.page';\nimport CategoryLazy, {\n  categoryDetailRoutePath\n} from './modules/category-detail/category-detail.lazy';\nimport HomeLazy, { homeRoutePath } from './modules/home/home.lazy';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <GlobalStyled />\n      <Router>\n        <Layout>\n          <Switch>\n            <Route path={homeRoutePath} exact component={HomeLazy} />\n            <Route path={categoryDetailRoutePath} component={CategoryLazy} />\n            <Route component={Page404Page} />\n          </Switch>\n        </Layout>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport const { NODE_ENV, REACT_APP_BASE_URL, REACT_APP_SITE_URL } = process.env;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nif (NODE_ENV !== 'production') {\n  var axe = require('react-axe');\n  axe(React, ReactDOM, 1000);\n}\n","import styled, { keyframes } from 'styled-components';\nimport { animationTime } from '../obj.constants';\n\nexport interface FadeProps {\n  show: boolean;\n  duration?: number;\n}\n\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\ninterface ForcedFadeProps {\n  show: boolean;\n  duration?: string;\n}\n\nexport const Fade = styled.div`\n  border: 0;\n  pointer-events: ${(props: FadeProps) => (props.show ? 'inherit' : 'none')};\n  animation: ${(props: FadeProps) => (props.show ? fadeIn : fadeOut)}\n    ${(props: FadeProps) => props.duration || animationTime} linear forwards;\n`;\n\n//////////////////////////////////////////////////\n\nexport const rotateAnimation = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n","import styled from 'styled-components';\nimport { LoaderAlt } from 'styled-icons/boxicons-regular/LoaderAlt';\nimport { rotateAnimation } from '../obj.animation/animation.component.style';\nimport {\n  BrandColor,\n  Color,\n  FontSize,\n  FontWeight,\n  Spacing\n} from '../obj.constants';\nimport { highlightStyle } from '../obj.mixin';\nimport { ButtonProps } from './button.component';\n\nexport const buttonHeight = '48px';\n\nexport const ButtonStyled = styled.button`\n  position: relative;\n  width: auto;\n  height: ${buttonHeight};\n  padding: 0 ${Spacing.XLarge};\n  width: 'auto';\n  text-align: 'center';\n  font-weight: ${FontWeight.SemiBold};\n  font-size: ${FontSize.Medium};\n  letter-spacing: 1px;\n  text-decoration: none;\n  ${highlightStyle}\n  cursor: pointer;\n  opacity: ${(props: ButtonProps) =>\n    props.disabled || props.loading ? 0.5 : 1};\n  display: inline-flex;\n  align-items: center;\n  text-align: center;\n\n  min-height: ${buttonHeight};\n\n  background-color: ${(props: ButtonProps) =>\n    props.outline ? Color.White : Color.Primary};\n  color: ${(props: ButtonProps) =>\n    props.outline ? BrandColor.KenyanCopper : Color.White};\n  border-color: ${(props: ButtonProps) =>\n    props.outline ? BrandColor.KenyanCopper : Color.Primary};\n  border-style: solid;\n  border-radius: 4px;\n\n  ${(props: ButtonProps) =>\n    !props.disabled && !props.loading\n      ? `\n  &:hover {\n    background-color: ${\n      props.outline ? BrandColor.Snow : BrandColor.ChineseRed\n    };\n  }\n  &:active {\n    background-color: ${\n      props.outline ? BrandColor.Snow : BrandColor.KenyanCopper\n    };\n    }\n  `\n      : ''}\n\n  /* this is useful when its father is pointer-events: none */\n  pointer-events: auto;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport const ButtonContentStyled = styled.div`\n  transition: all 0.2s ease-in-out;\n  /* https://github.com/styled-components/styled-components/issues/1198#issuecomment-336621217 */\n  opacity: ${(props: { loading?: number }) => (props.loading ? 0 : 1)};\n  font-stretch: 100%;\n  width: 100%;\n`;\n\nconst loadingSize = 36;\nexport const ButtonSpinnerWrapperStyled = styled.span`\n  /* https://github.com/styled-components/styled-components/issues/1198#issuecomment-336621217 */\n  display: ${(props: { loading?: number }) =>\n    props.loading ? 'inline-block' : 'none'};\n  position: absolute;\n  right: calc(50% - ${loadingSize / 2}px);\n  top: calc(50% - ${loadingSize / 2}px);\n`;\n\nexport const ButtonSpinnerStyled = styled(LoaderAlt).attrs({\n  size: loadingSize\n})`\n  animation: ${rotateAnimation} 2s linear infinite;\n`;\n","import * as React from 'react';\nimport {\n  ButtonContentStyled,\n  ButtonSpinnerStyled,\n  ButtonSpinnerWrapperStyled,\n  ButtonStyled\n} from './button.component.style';\n\nexport interface ButtonProps {\n  disabled?: boolean;\n  loading?: boolean;\n  outline?: boolean;\n  onClick?: () => any;\n  type?: 'button' | 'submit' | 'reset';\n}\n\nconst Button: React.FunctionComponent<ButtonProps> = props => {\n  const { loading, disabled, outline, type, ...others } = props;\n\n  return (\n    <ButtonStyled outline={outline} disabled={loading || disabled} {...others}>\n      <ButtonContentStyled loading={loading ? 1 : 0}>\n        {props.children}\n      </ButtonContentStyled>\n      <ButtonSpinnerWrapperStyled loading={loading ? 1 : 0}>\n        <ButtonSpinnerStyled />\n      </ButtonSpinnerWrapperStyled>\n    </ButtonStyled>\n  );\n};\n\nexport default Button;\n\nButton.defaultProps = {\n  disabled: false,\n  loading: false,\n  outline: false,\n  type: 'button'\n};\n","export * from './mixin.component.style';\n","// https://css-tricks.com/snippets/css/remove-gray-highlight-when-tapping-links-in-mobile-safari/\nexport const highlightStyle = `\n  cursor: pointer;\n  -webkit-tap-highlight-color: rgba(0,0,0,0.05);\n`;\n\nexport const cardStyle = `\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n`;\n","import styled from 'styled-components';\nimport { LoaderAlt } from 'styled-icons/boxicons-regular/LoaderAlt';\nimport { rotateAnimation } from '../obj.animation/animation.component.style';\n\nconst size = 60;\nexport const PageLoadingSpinner = styled(LoaderAlt).attrs({\n  size\n})`\n  position: absolute;\n  top: calc(50% - ${size / 2}px);\n  left: calc(50% - ${size / 2}px);\n  animation: ${rotateAnimation} 2s linear infinite;\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\n/**\n * seo meta-tags\n *\n * twitter: https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary\n * facebook: http://ogp.me\n *\n * test here:\n *  - facebook: https://developers.facebook.com/tools/debug/\n *  - twitter: https://cards-dev.twitter.com/validator\n *\n */\nexport interface SocialMediaSEOProps {\n  /**\n   * # twitter\n   * A concise title for the related content. Platform specific behaviors:\n   * - iOS, Android: Truncated to two lines in timeline and expanded Tweet\n   * - Web: Truncated to one line in timeline and expanded Tweet\n   *\n   * # ogp\n   * -  The title of your object as it should appear within the graph, e.g., \"The Rock\".\n   */\n  title: string;\n\n  /**\n   * # twitter\n   * A URL to a unique image representing the content of the page. You should not use a generic image such as your website logo, author photo, or other image that spans multiple pages. Images for this Card support an aspect ratio of 1:1 with minimum dimensions of 144x144 or maximum of 4096x4096 pixels. Images must be less than 5MB in size. The image will be cropped to a square on all platforms. JPG, PNG, WEBP and GIF formats are supported. Only the first frame of an animated GIF will be used. SVG is not supported.\n   *\n   * # ogp\n   * An image URL which should represent your object within the graph.\n   * ex: \"http://ia.media-imdb.com/images/rock.jpg\"\n   */\n  image: string;\n\n  /**\n   * # twitter\n   * A description that concisely summarizes the content as appropriate for presentation within a Tweet. You should not re-use the title as the description or use this field to describe the general services provided by the website. Platform specific behaviors:\n   * - iOS, Android: Not displayed\n   * - Web: Truncated to three lines in timeline and expanded Tweet\n   */\n  description?: string;\n\n  /**\n   * # ogp\n   *  The canonical URL of your object that will be used as its permanent ID in the graph, e.g., \"http://www.imdb.com/title/tt0117500/\".\n   */\n  url: string;\n\n  /**\n   * # twitter\n   * A text description of the image conveying the essential nature of an image to users who are visually impaired. Maximum 420 characters.\n   *\n   * # ogp\n   * A description of what is in the image (not a caption). If the page specifies an og:image it should specify og:image:alt.\n   */\n  imageAlt?: string;\n}\n\n//\n\nfunction areEqual(\n  prevProps: SocialMediaSEOProps,\n  nextProps: SocialMediaSEOProps\n) {\n  const mainInfoEqual =\n    prevProps.title === nextProps.title &&\n    prevProps.image === nextProps.image &&\n    prevProps.description === nextProps.description &&\n    prevProps.url === nextProps.url &&\n    prevProps.imageAlt === nextProps.imageAlt;\n  if (!mainInfoEqual) return false;\n\n  return true;\n}\n\nexport const SocialMediaSEO = React.memo((props: SocialMediaSEOProps) => {\n  const fbAppId = '';\n  return (\n    <Helmet>\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:site\" content=\"@fleury_online\" />\n      <meta name=\"twitter:title\" content={props.title} />\n      {props.description && (\n        <meta name=\"twitter:description\" content={props.description} />\n      )}\n      <meta name=\"twitter:image\" content={props.image} />\n      {props.imageAlt && (\n        <meta name=\"twitter:image:alt\" content={props.imageAlt} />\n      )}\n\n      {/* # http://ogp.me/#metadata */}\n      <meta property=\"og:type\" content={'website'} />\n      <meta property=\"og:title\" content={props.title} />\n      <meta property=\"og:url\" content={props.url} />\n      <meta property=\"og:image\" content={props.image} />\n      {props.description && (\n        <meta name=\"og:description\" content={props.description} />\n      )}\n\n      {props.imageAlt && <meta name=\"og:image:alt\" content={props.imageAlt} />}\n      <meta property=\"og:locale\" content=\"pt_BR\" />\n      <meta property=\"og:site_name\" content=\"Fleury\" />\n      {fbAppId && <meta property=\"fb:app_id\" content={fbAppId} />}\n    </Helmet>\n  );\n}, areEqual);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { JsonLd, JsonLdProps } from './json-ld.component';\nimport {\n  SocialMediaSEO,\n  SocialMediaSEOProps\n} from './social-media-seo.component';\n\n/**\n * If your content is an article, you don't need to send jsonLd (just send the article data inside the socialMedia.article)\n */\nexport interface SEOProps extends JsonLdProps {\n  socialMedia: SocialMediaSEOProps;\n}\n\nexport const SEO = (props: SEOProps) => {\n  const mainInfo = React.useMemo(\n    () => (\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"language\" content=\"Portuguese\" />\n        <title>{props.socialMedia.title}</title>\n        <meta name=\"image\" content={props.socialMedia.image} />\n        {props.socialMedia.description && (\n          <meta name=\"description\" content={props.socialMedia.description} />\n        )}\n        <link rel=\"canonical\" href={props.socialMedia.url} />\n      </Helmet>\n    ),\n    [\n      props.socialMedia.description,\n      props.socialMedia.image,\n      props.socialMedia.title,\n      props.socialMedia.url\n    ]\n  );\n\n  return (\n    <>\n      <SocialMediaSEO {...props.socialMedia} />\n      {props.jsonld && <JsonLd jsonld={props.jsonld} />}\n      {mainInfo}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Spacing } from '../obj.constants';\n\nexport const VSeparator = styled.div`\n  padding: ${Spacing.Small};\n`;\n","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport { REACT_APP_SITE_URL } from '../..';\nimport { PageLoadingSpinner } from '../../atomic/atm.page-loading/page-loading.style';\nimport { SEO } from '../../atomic/obj.seo/seo.component';\n\nexport const categoryDetailRoutePath = `/category/:id`;\ninterface CategoryDetailLazyParams {\n  id: string;\n}\nexport const getCategoryDetailUrlPath = (id: string) => `/category/${id}`;\n\nconst CategoryDetailPage = React.lazy(() => import('./category-detail.page'));\n\ninterface CategoryDetailLazyProps\n  extends RouteChildrenProps<CategoryDetailLazyParams> {}\n\nconst CategoryDetailLazy: React.FunctionComponent<\n  CategoryDetailLazyProps\n> = props => {\n  const name = props.match ? props.match.params.id : '';\n  const currentUrl = `${REACT_APP_SITE_URL}${props.location.pathname}`;\n  return (\n    <>\n      <SEO\n        socialMedia={{\n          url: currentUrl,\n          title: `${name} facts`,\n          image: 'https://assets.chucknorris.host/img/avatar/chuck-norris.png',\n          imageAlt: 'Chuck Norris avatar',\n          description: `Learn ${name} facts about Him!`\n        }}\n      />\n      <React.Suspense fallback={<PageLoadingSpinner />}>\n        <CategoryDetailPage name={name} />\n      </React.Suspense>\n    </>\n  );\n};\n\nexport default CategoryDetailLazy;\n","import styled from 'styled-components';\nimport { Spacing } from '../obj.constants';\nimport { cardStyle } from '../obj.mixin';\n\nexport const ErrorPlaceholderStyled = styled.div`\n  margin: ${Spacing.Medium} 0;\n  display: inline-grid;\n  justify-items: center;\n  grid-gap: ${Spacing.Medium};\n  ${cardStyle}\n  padding: ${Spacing.Medium};\n`;\n","import * as React from 'react';\nimport { ErrorOutline } from 'styled-icons/material/ErrorOutline';\nimport { ErrorPlaceholderStyled } from './error-placeholder.style';\nimport { H3 } from '../atm.typography';\nimport Button from '../atm.button/button.component';\n\ninterface ErrorPlaceholderProps {\n  title?: string;\n  buttonTitle?: string;\n  onClick?: () => void;\n}\n\nconst ErrorPlaceholder: React.FunctionComponent<\n  ErrorPlaceholderProps\n> = props => {\n  return (\n    <ErrorPlaceholderStyled>\n      <ErrorOutline size={60} />\n      <H3>{props.title}</H3>\n      {props.onClick && (\n        <Button onClick={props.onClick}>{props.buttonTitle}</Button>\n      )}\n    </ErrorPlaceholderStyled>\n  );\n};\nErrorPlaceholder.defaultProps = {\n  title: 'Sorry! An error ocurred.',\n  buttonTitle: 'Try again'\n};\n\nexport default ErrorPlaceholder;\n","import * as React from 'react';\n\nexport interface JsonLdProps {\n  jsonld?: object;\n}\n\n// src: https://blog.haroen.me/json-ld-with-react#comment-3255424415\n// You can test it here: https://search.google.com/structured-data/testing-tool/u/0/\nexport const JsonLd: React.FunctionComponent<JsonLdProps> = props => {\n  return props.jsonld ? (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(props.jsonld) }}\n    />\n  ) : null;\n};\n"],"sourceRoot":""}